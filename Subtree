/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param T1, T2: The roots of binary tree.
     * @return: True if T2 is a subtree of T1, or false.
     */
    bool isSubtree(TreeNode *T1, TreeNode *T2) {
        // write your code here
        if(isIdentical(T1, T2)) {
            return true;
        }
        else {
            if(T1 != NULL) {
                return (isSubtree(T1->left, T2) || isSubtree(T1->right, T2));
            }
            else{
                return false;
            }
        }
    }
    
    bool isIdentical(TreeNode *T1, TreeNode *T2){
        if(T1 == NULL && T2 == NULL) {
            return true;
        }
        
        if((T1 && !T2) || (!T1 && T2))
        {
            return false;
        }
        if(T1->val == T2->val && isIdentical(T1->left, T2->left) && isIdentical(T1->right, T2->right))
        {
            return true;
        }
        else
        {
            return false;
        }

 
    }
};
