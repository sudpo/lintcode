class Solution {
public:    
    /**
     * @param A, B: Two string.
     * @return: the length of the longest common substring.
     */
    int longestCommonSubstring(string &A, string &B) {
        // write your code here
        int n = A.size();
        int m = B.size();
        if(n == 0 || m == 0) {
            return 0;
        }
        
        //dp[i][j] means the longestCommonSubstring ending with A[i-1] and B[j-1]; 
        vector<vector<int> > dp(n+1, vector<int> (m+1, 0));
        int result = 0;
        for(int i = 1; i <= n; ++i){
            for(int j = 1; j <= m; ++j){
                if(A[i-1] == B[j-1]){
                    dp[i][j] = dp[i-1][j-1] + 1;
                }
                else {
                    dp[i][j] = 0;
                }
                result = max(result, dp[i][j]);
            }
        }

        return result;
    }
};
