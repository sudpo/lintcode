class Solution {
public:
    /**
     * @param pages: a vector of integers
     * @param k: an integer
     * @return: an integer
     */
    int copyBooks(vector<int> &pages, int k) {
        // write your code here
        int n = pages.size();
        if(n == 0) {
            return 0;
        }
        vector<vector<int> > dp(n+1, vector<int>(k+1, 0));
        int maxPage = 0;
        for(int i = 1; i <= n; ++i){
            dp[i][1] = dp[i-1][1] + pages[i-1];
            maxPage = max(maxPage, pages[i-1]);
        }
        if(k >= n){
            return maxPage;
        }
        
        for(int i = 2; i <= n; ++i){
            for(int j = 2; j <= k && j < i; ++j){
                int temp = 0;
                int minTemp = INT_MAX;
                for(int l = 1; l < i; ++l){
                    temp += pages[i-l];
                    minTemp = min(max(dp[i-l][j-1], temp), minTemp);
                }
                dp[i][j] = minTemp;
            }
        }
        return dp[n][k];
    }
};
