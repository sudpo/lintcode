/**
 * Definition of Interval:
 * classs Interval {
 *     int start, end;
 *     Interval(int start, int end) {
 *         this->start = start;
 *         this->end = end;
 *     }
 */
class Solution {
public:
    /**
     * Insert newInterval into intervals.
     * @param intervals: Sorted interval list.
     * @param newInterval: new interval.
     * @return: A new interval list.
     */
    vector<Interval> insert(vector<Interval> &intervals, Interval newInterval) {
        // write your code here
        
        int n = intervals.size();
        vector<Interval> result;
        result.push_back(newInterval);
        if(n == 0) {
            return result;
        }
        
        for(int i = 0; i < n; ++i) {
            Interval temp = result.back();
            result.pop_back();
            if(intervals[i].end < temp.start)
            {
                result.push_back(intervals[i]);
                result.push_back(temp);
            }
            else if(intervals[i].start > temp.end) {
                result.push_back(temp);
                result.push_back(intervals[i]);
            }
            else {
                temp.start = min(intervals[i].start, temp.start);
                temp.end = max(intervals[i].end, temp.end);
                result.push_back(temp);
            }
        }
        return result;
        
    }
};
