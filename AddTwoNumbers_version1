/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /**
     * @param l1: the first list
     * @param l2: the second list
     * @return: the sum list of l1 and l2 
     */
    ListNode *addLists(ListNode *l1, ListNode *l2) {
        // write your code here
        ListNode *dummy = new ListNode(0);
        ListNode *head = dummy;
        dummy->next = head;
        int sum = 0;
        int carry = 0;
        while(l1 != NULL && l2 != NULL){
            sum = l1->val + l2->val + carry;
            carry = sum /10;
            sum = sum % 10;
            ListNode * newNode = new ListNode(sum);
            head->next = newNode;
            head = head -> next;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1 != NULL){
            sum = l1->val + carry;
            carry = sum /10;
            sum = sum % 10;
            ListNode * newNode = new ListNode(sum);
            head->next = newNode;
            head = head -> next;
            l1 = l1->next;
        }
        
        while(l2 != NULL){
            sum = l2->val + carry;
            carry = sum /10;
            sum = sum % 10;
            ListNode * newNode = new ListNode(sum);
            head->next = newNode;
            head = head -> next;
            l2 = l2->next;
        }
        if(carry != 0){
            ListNode * newNode = new ListNode(carry);
            head->next = newNode;
        }
        return dummy->next;
    }
};
