class Solution {
public:
    /**
     * @param prices: Given an integer array
     * @return: Maximum profit
     */
    int maxProfit(vector<int> &prices) {
        // write your code here
        int n = prices.size();
        if( n <= 1) {
            return 0;
        }
        vector<int> lmax(n, 0);
        vector<int> rmax(n, 0);
        //lmax[i] 表示从0到第i个数的左边的最大值
        //rmax[i] 表示从第i个数开始到最右边的最大值
        
        int currMin = prices[0];
        for(int i = 1; i < n; ++i) {
            currMin = min(prices[i], currMin);
            lmax[i] = max(lmax[i-1], prices[i] - currMin);
        }
        
        rmax[n-1] = 0;
        int currMax = prices[n-1];
        for(int i = n-2; i > 0; --i) {
            currMax = max(prices[i], currMax);
            rmax[i] = max(rmax[i+1], currMax - prices[i]);
        }
        
        int result = 0;
        for(int i = 0; i < n; ++i) {
            result = max(result, lmax[i] + rmax[i]);
        }
        return result;
        
    }
};
