class Solution {
public:
    /**
     * @param tokens The Reverse Polish Notation
     * @return the value
     */
    int evalRPN(vector<string>& tokens) {
        // Write your code here
        if(tokens.size() == 0) {
            return 0;
        }
        
        stack<string> s;
        for(int i = 0; i < tokens.size(); ++i){
            string tok = tokens[i];
            if(!is_operator(tok)){
                s.push(tok);
            }
            else{
                int y = stoi(s.top());
                s.pop();
                int x = stoi(s.top());
                s.pop();
                if(tok[0] == '+'){
                    x += y;
                }
                else if (tok[0] == '-'){
                    x -= y;
                }
                else if( tok[0] == '*'){
                    x *= y;
                }
                else {
                    x /= y;
                }
                s.push(to_string(x));
            }
        }
        return stoi(s.top());
    }
    
    bool is_operator(string tok ) {
        return tok.size() == 1 && string("+-*/").find(tok) != string::npos;
    }
};
