/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /**
     * @param head a ListNode
     * @oaram v1 an integer
     * @param v2 an integer
     * @return a new head of singly-linked list
     */
    ListNode* swapNodes(ListNode* head, int v1, int v2) {
        // Write your code here
        ListNode *dummy = new ListNode(0);
        dummy->next = head;
        ListNode *p1 = dummy;
        ListNode *p2 = dummy;
        ListNode *node1 = head;
        ListNode *node2 = head;
        
        while(node1 != NULL) {
            if(node1->val == v1) {
                break;
            }
            else{
                node1 = node1->next;
                p1 = p1->next;
            }
        }
        
        while(node2 != NULL) {
            if(node2->val == v2) {
                break;
            }
            else{
                node2 = node2->next;
                p2 = p2->next;
            }
        }
        
        if(node1 == NULL || node2 == NULL) {
            return head;
        }
        
        if(p2 != node1 && p1 != node2) {
            ListNode *temp = node2->next;
            p1->next = node2;
            node2->next = node1->next;
            p2->next = node1;
            node1->next = temp;
        }
        if(node1 == p2) {
            p2 = node2->next;
            p1->next = node2;
            node2->next = node1;
            node1->next = p2;
        }
        if(node2 == p1) {
            p1 = node1->next;
            p2->next = node1;
            node1->next = node2;
            node2->next = p1;
        }
        return dummy->next;
        
    }
};
