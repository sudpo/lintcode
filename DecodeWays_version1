class Solution {
public:
    /**
     * @param s a string,  encoded message
     * @return an integer, the number of ways decoding
     */
    int numDecodings(string& s) {
        // Write your code here
        int n = s.size();
        if(n == 0 || s[0] == '0') {
            return 0;
        }
        vector<int> dp(n+1, 0);
        dp[0] = 1;
        dp[1] = 1;
        
        for(int i = 2; i <= n; i++) {
            int a = s[i-2] - '0';
            int b = s[i-1] - '0';
            if(a == 0 && b == 0) {
                return 0;
            }
            if(a == 0 && b != 0) {
                dp[i] = dp[i-1];
                continue;
            }
            if(a != 0 && b == 0) {
                if(a > 2) {
                    return 0;
                }
                else{
                    dp[i] = dp[i-2];
                    continue;
                }
            }
            int temp = a * 10 + b;
            if(temp > 26){
                dp[i] = dp[i-1];
            }
            else{
                dp[i] = dp[i-1] + dp[i-2];
            }
        }
        return dp[n];
    }
};
