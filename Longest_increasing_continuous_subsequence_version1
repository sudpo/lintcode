class Solution {
public:
    /**
     * @param A an array of Integer
     * @return  an integer
     */
    int longestIncreasingContinuousSubsequence(vector<int>& A) {
        // Write your code here
        int n = A.size();
        if(n == 0) {
            return 0;
        }
        int result_increase = 1;
        int result_decrease = 1;
        int curMax_increase = 1;
        int curMax_decrease = 1;
        for(int i = 1; i < n; ++i) {
            if(A[i] > A[i-1]) {
                curMax_increase++;
                result_increase = max(result_increase, curMax_increase);
                curMax_decrease = 1;
            }
            if(A[i] < A[i-1]) {
                curMax_increase = 1;
                curMax_decrease++;
                result_decrease = max(result_decrease, curMax_decrease);
            }
        }
        return max(result_increase, result_decrease);
    }
};
